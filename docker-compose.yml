services:
    migrate-database:
        profiles:
            - migrate-database
        depends_on:
            - mongo
        build:
            context: ./
            dockerfile: MigrateDatabase/Dockerfile
            args:
                MigrateDatabaseDir: MigrateDatabase
                DataAccessDir: DataAccess
        environment:
            ENVIRONMENT: Production
        networks:
            - nat

    mongo-test:
        profiles:
            - only-db-test
            - transfer-db-test
            - ingestion-test
            - dashboard-test
            - ingestion-dev
        image: mongo
        restart: always
        ports:
            - 27018:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        networks:
            - nat-test
        volumes:
            - stats-test:/data/db

    mongo-transfer:
        profiles:
            - transfer-db-test
        depends_on:
            - mongo
            - mongo-test
        image: mongo
        restart: on-failure
        networks:
            - nat-test
            - nat
        command: sh -c 'mongodump -d BlockTanksStats --uri="mongodb://root:example@mongo:27017" --archive --authenticationDatabase admin | mongorestore --drop --uri="mongodb://root:example@mongo-test:27017" --archive'

    mongo:
        profiles:
            - transfer-db-test
            - only-db
            - ingestion
            - dashboard
            - migrate-database
        image: mongo
        restart: always
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        networks:
            - nat
        volumes:
            - stats:/data/db

    mongo-express-test:
        profiles:
            - only-db-test
            - ingestion-test
            - ingestion-dev
        depends_on:
            - mongo-test
        image: mongo-express
        ports:
            - 8082:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example
            ME_CONFIG_MONGODB_SERVER: mongo-test
        networks:
            - nat-test

    mongo-express:
        profiles:
            - only-db
            - migrate-database
        depends_on:
            - mongo
        image: mongo-express
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example
        networks:
            - nat

    selenium-chrome:
        profiles:
            - ingestion
            - ingestion-test
            - ingestion-dev
        image: selenium/standalone-chrome-debug
        volumes:
            - /dev/shm:/dev/shm # This is recommended by the readme of the image. https://github.com/SeleniumHQ/docker-selenium
        environment:
            START_XVFB: 'true' # If this is true, it starts a server in the container that is only necessary when you don't run chrome in headless mode
            VNC_NO_PASSWORD: 1
        restart: always
        ports:
            - 4444:4444
            - 5900:5900
        networks:
            - nat
            - nat-test

    #selenium-hub:
    #    profiles:
    #        - ingestion
    #        - ingestion-test
    #        - ingestion-dev
    #    image: selenium/hub:4
    #    restart: always
    #    container_name: selenium-hub
    #    ports:
    #      - "4442:4442"
    #      - "4443:4443"
    #      - "4444:4444"
    #    networks:
    #        - nat
    #        - nat-test
    #        - selenium-grid

    #selenium-chrome-node1:
    #    profiles:
    #        - ingestion
    #        - ingestion-test
    #        - ingestion-dev
    #    image: selenium/node-chrome:91.0.4472.114
    #    restart: always
    #    depends_on:
    #        - selenium-hub
    #    environment:
    #        - START_XVFB=false # If this is true, it starts a server in the container that is only necessary when you don't run chrome in headless mode
    #        - SE_EVENT_BUS_HOST=selenium-hub
    #        - SE_EVENT_BUS_PUBLISH_PORT=4442
    #        - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    #    volumes:
    #        - /dev/shm:/dev/shm # This is recommended by the readme of the image. https://github.com/SeleniumHQ/docker-selenium
    #    ports:
    #        - "6900:5900"
    #    networks:
    #        - selenium-grid

    #selenium-chrome-node2:
    #    profiles:
    #        - ingestion
    #        - ingestion-test
    #        - ingestion-dev
    #    image: selenium/node-chrome:91.0.4472.114
    #    restart: always
    #    depends_on:
    #        - selenium-hub
    #    environment:
    #        - START_XVFB=false # If this is true, it starts a server in the container that is only necessary when you don't run chrome in headless mode
    #        - SE_EVENT_BUS_HOST=selenium-hub
    #        - SE_EVENT_BUS_PUBLISH_PORT=4442
    #        - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    #    volumes:
    #        - /dev/shm:/dev/shm # This is recommended by the readme of the image. https://github.com/SeleniumHQ/docker-selenium
    #    ports:
    #        - "6901:5900"
    #    networks:
    #        - selenium-grid

    #selenium-chrome-node3:
    #    profiles:
    #        - ingestion
    #        - ingestion-test
    #        - ingestion-dev
    #    image: selenium/node-chrome:91.0.4472.114
    #    restart: always
    #    depends_on:
    #        - selenium-hub
    #    environment:
    #        - START_XVFB=false # If this is true, it starts a server in the container that is only necessary when you don't run chrome in headless mode
    #        - SE_EVENT_BUS_HOST=selenium-hub
    #        - SE_EVENT_BUS_PUBLISH_PORT=4442
    #        - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    #    volumes:
    #        - /dev/shm:/dev/shm # This is recommended by the readme of the image. https://github.com/SeleniumHQ/docker-selenium
    #    ports:
    #        - "6902:5900"
    #    networks:
    #        - selenium-grid

    #selenium-chrome-node4:
    #    profiles:
    #        - ingestion
    #        - ingestion-test
    #        - ingestion-dev
    #    image: selenium/node-chrome:91.0.4472.114
    #    restart: always
    #    depends_on:
    #        - selenium-hub
    #    environment:
    #        - START_XVFB=false # If this is true, it starts a server in the container that is only necessary when you don't run chrome in headless mode
    #        - SE_EVENT_BUS_HOST=selenium-hub
    #        - SE_EVENT_BUS_PUBLISH_PORT=4442
    #        - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    #    volumes:
    #        - /dev/shm:/dev/shm # This is recommended by the readme of the image. https://github.com/SeleniumHQ/docker-selenium
    #    ports:
    #        - "6903:5900"
    #    networks:
    #        - selenium-grid

    ingestion-test:
        profiles:
            - ingestion-test
        depends_on:
            - mongo-test
            - selenium-chrome
            #- selenium-hub
        build:
            context: ./
            dockerfile: Ingestion/Dockerfile
            args:
                IngestionDir: Ingestion
                DataAccessDir: DataAccess
        environment:
            ENVIRONMENT: Test
            LOG_PATH: /app/Logs/Test
        networks:
            - nat-test
        volumes:
            - ./Logs:/app/Logs

    ingestion:
        profiles:
            - ingestion
        depends_on:
            - mongo
            - selenium-chrome
            #- selenium-hub
        build:
            context: ./
            dockerfile: Ingestion/Dockerfile
            args:
                IngestionDir: Ingestion
                DataAccessDir: DataAccess
        environment:
            ENVIRONMENT: Production
            LOG_PATH: /app/Logs/Production
        networks:
            - nat
        volumes:
            - ./Logs:/app/Logs

    blocktanksstats-test:
        profiles:
            - dashboard-test
        depends_on:
            - mongo-test
        build:
            context: ./
            dockerfile: BlockTanksStats/Dockerfile
            args:
                BlockTanksStatsDir: BlockTanksStats
                DataAccessDir: DataAccess
        environment:
            ENVIRONMENT: Test
            PERIOD_LENGHT_DAYS: 14
            LOG_PATH: /app/Logs/Test
        networks:
            - nat-test
        volumes:
            - ./Dashboards-test:/app/Dashboards
            - ./Logs:/app/Logs

    blocktanksstats:
        profiles:
            - dashboard
        depends_on:
            - mongo
        build:
            context: ./
            dockerfile: BlockTanksStats/Dockerfile
            args:
                BlockTanksStatsDir: BlockTanksStats
                DataAccessDir: DataAccess
        environment:
            ENVIRONMENT: Production
            PERIOD_LENGHT_DAYS: 14
            LOG_PATH: /app/Logs/Production
        networks:
            - nat
        volumes:
            - ./Dashboards:/app/Dashboards
            - ./Logs:/app/Logs

networks:
    nat:
        name: nat
    nat-test:
        name: nat-test
    #selenium-grid:
    #    name: selenium-grid

volumes:
    stats:
    stats-test:
